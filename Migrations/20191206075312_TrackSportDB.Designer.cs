// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Track_Sport_Events_MVC.Models;

namespace Track_Sport_Events_MVC.Migrations
{
    [DbContext(typeof(Track_Sport_EventsDataContext))]
    [Migration("20191206075312_TrackSportDB")]
    partial class TrackSportDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Track_Sport_Events_MVC.Models.Runner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GoldMedals")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Runner");
                });

            modelBuilder.Entity("Track_Sport_Events_MVC.Models.TimingRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RecordedTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RunnerId")
                        .HasColumnType("int");

                    b.Property<int>("TrackSportEventId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RunnerId");

                    b.HasIndex("TrackSportEventId");

                    b.ToTable("TimingRecord");
                });

            modelBuilder.Entity("Track_Sport_Events_MVC.Models.TrackSportEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EventName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TrackSportEvent");
                });

            modelBuilder.Entity("Track_Sport_Events_MVC.Models.TimingRecord", b =>
                {
                    b.HasOne("Track_Sport_Events_MVC.Models.Runner", "Runner")
                        .WithMany()
                        .HasForeignKey("RunnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Track_Sport_Events_MVC.Models.TrackSportEvent", "TrackSportEvent")
                        .WithMany()
                        .HasForeignKey("TrackSportEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
